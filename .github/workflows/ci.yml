name: Build and Release Executables

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: ['windows-latest', 'ubuntu-latest', 'macos-latest']

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.x

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build Windows executable
        run: pyinstaller --name "kodiak" --onefile --windowed --icon=assets/kodiak.ico main.py 
        if: matrix.os == 'windows-latest'

      # - name: Build Linux executable
      #   run: pyinstaller --name "kodiak" --onefile --windowed --icon=assets/kodiak.ico main.py 
      #   if: matrix.os == 'ubuntu-latest'

      - name: Build Mac executable
        run: pyinstaller --name "kodiak" --onefile --windowed --icon=assets/kodiak.icns main.py
        if: matrix.os == 'macos-latest'
      
      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          body: |
            Release ${{ github.ref }}
          draft: false
          prerelease: false

      - name: Upload Executable
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: |
            ./dist/kodiak
          asset_name: kodiak.${{ matrix.os == 'macos-latest' && 'dmg' || 'exe' }}
          asset_content_type: ${{ matrix.os == 'macos-latest' && 'application/x-dmg' || 'application/x-msdownload' }}


     

    
 