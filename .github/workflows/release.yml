# ---
# name: Kodiak Build
# on:
#   push:
#     branches:
#       - main
#     tags:
#       - 'v-*'
# jobs:
#   build-linux:
#     name: Build Linux Binary
#     runs-on: ubuntu-22.04
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: recursive

#       - name: Set up python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}
#           cache: 'pip'
        
#       - name: Install dependencies
#         run: | 
#           pip install --upgrade pip
#           pip install packaging wheel setuptools-scm
#           pip install -r requirements.txt

#       - name: Package Binary
#         run: python package.py 


#   build-mac:
#     name: Build Mac Binary
#     runs-on: macos-11
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: recursive

#       - name: Set up python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}
#           cache: 'pip'
        
#       - name: Install dependencies
#         run: | 
#           pip install --upgrade pip
#           pip install packaging wheel setuptools-scm
#           pip install -r requirements.txt


#   build-windows:
#     name: Build Windows Binary
#     runs-on: windows-latest
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: recursive

#       - name: Set up python
#         uses: actions/setup-python@v4
#         with:
#           python-version: ${{ env.PYTHON_VERSION }}
#           cache: 'pip'
        
#       - name: Install dependencies
#         run: | 
#           pip install --upgrade pip
#           pip install packaging wheel setuptools-scm
#           pip install -r requirements.txt


# ---
# name: CI
# on:
#   push:
#     branches:
#       - main
#     tags:
#       - '*'
#   pull_request:

# concurrency:
#   group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#   cancel-in-progress: true

# jobs:

#   build:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           - os: macos-latest
#           - os: windows-latest
#           - os: ubuntu-20.04
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: recursive
#       - uses: actions/setup-python@v4
#         with:
#           python-version: '3.10.7'

#       - name: Install Poetry Action
#         uses: snok/install-poetry@v1.3.1
#         with:
#           virtualenvs-create: true
#           virtualenvs-in-project: true

#       - name: Load cached venv
#         id: cached-poetry-dependencies
#         uses: actions/cache@v3
#         with:
#           path: .venv
#           key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}-2

#       - uses: FedericoCarboni/setup-ffmpeg@v1
#         id: setup-ffmpeg
#         with:
#           token: ${{ secrets.GITHUB_TOKEN }}

#       - name: Install dependencies
#         run: poetry config experimental.new-installer false && poetry install

#       - name: Bundle
#         run: |
#           if [ "$RUNNER_OS" == "macOS" ]; then
#             brew install create-dmg
#             poetry run make bundle_mac
#           elif [ "$RUNNER_OS" == "Windows" ]; then
#             poetry run make bundle_windows
#           elif [ "$RUNNER_OS" == "Linux" ]; then
#             poetry run make bundle_linux
#           fi
#         shell: bash

#       - uses: actions/upload-artifact@v3
#         with:
#           name: Kodiak-${{ runner.os }}
#           path: |
#             dist/Kodiak*-windows.tar.gz
#             dist/Kodiak*-windows.exe
#             dist/Kodiak*-mac.dmg
#             dist/Kodiak*-unix.tar.gz
#   release:
#     runs-on: ${{ matrix.os }}
#     strategy:
#       fail-fast: false
#       matrix:
#         include:
#           - os: macos-latest
#           - os: windows-latest
#     needs: [ build, test ]
#     if: startsWith(github.ref, 'refs/tags/')
#     steps:
#       - uses: actions/checkout@v3
#         with:
#           submodules: recursive
#       - uses: actions/download-artifact@v3
#         with:
#           name: Kodiak-${{ runner.os }}
#       - name: Install Poetry Action
#         uses: snok/install-poetry@v1.3.1
#         with:
#           virtualenvs-create: true
#           virtualenvs-in-project: true
#       - name: Release
#         uses: softprops/action-gh-release@v1
#         with:
#           files: |
#             Kodiak*-windows.tar.gz
#             Kodiak*-unix.tar.gz
#             Kodiak*-windows.exe
#             Kodiak*-mac.dmg